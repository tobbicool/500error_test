---
import { i18n } from '../../i18n';
import Trans from '../../components/Trans.astro';
import { getCharacterName } from "../../scripts/character-name-from-url.js";

const characterName = getCharacterName(Astro.url);

function generateTranslationKeys(characterName, index) {
    return {
        quoteKey: `character-${characterName}:quoteSlider${index}`,
        sourceKey: `character-${characterName}:quoteSliderSource${index}`,
    };
}

let slides = [];
let index = 1;
while (true) {
    let { quoteKey, sourceKey } = generateTranslationKeys(characterName, index);
    if (!i18n.exists(quoteKey) && !i18n.exists(sourceKey)) break;
    slides.push({ quoteKey, sourceKey });
    index++;
}
---

<!-- Dynamically generating slides based on if there is a translation for it. -->
<div class="slider-container">
    <div class="slider">
        <div class="slides">
            {slides.map(({ quoteKey, sourceKey }) => (
                <div class="slide">
                    <p><Trans key={quoteKey} /></p>
                    <span><Trans key={sourceKey} /></span>
                </div>
            ))}
            <div class="slide">
                <h3><Trans key={`character-${characterName}:quoteSliderProgressHeader`} /></h3>
                <p>
                    <Trans key={`character-${characterName}:quoteSliderProgressDescription`} />
                </p>
                <input type="checkbox" id="quotes-checkbox" />
            </div>
        </div>
    </div>

    <div class="nav-wrapper">
        <span class="empty"></span>
        <div class="indicator">
            {[...Array(slides.length + 1)].map((_, index) => (
                <span class="slider-dot"></span>
            ))}
        </div>
        <div class="prev-next-wrapper">
            <a class="prev">
                <img src="/media/icons/slider-arrow.svg" alt="Left arrow" />
            </a>
            <a class="next">
                <img src="/media/icons/slider-arrow.svg" alt="Right arrow" />
            </a>
        </div>
    </div>
</div>

<style lang="scss">
    /* * {
        outline: 1px solid yellow;
    } */

    .slider-container {
        background-color: var(--alt-primary-clr);
        padding: 2rem 2rem 0 2rem;
        border-radius: 1rem;
        max-width: 550px;
        width: 100%;

        @media screen and (max-width: 1200px) {
            max-width: 450px;
        }

        .slider {
            position: relative;
            overflow: hidden;
            transition: 0.3s ease;
            width: 100%;

            .slides {
                display: flex;
                transition: transform 0.3s ease;

                .slide {
                    min-width: 100%;
                    transition: opacity 0.3s ease;
                    position: relative;
                    height: fit-content;

                    p {
                        line-height: 1.3;
                    }

                    span {
                        line-height: 2;
                        font-style: italic;
                        color: #727272;
                    }

                    h3 {
                        font-size: var(--fs-large);
                    }
                }
            }
        }

        .nav-wrapper {
            display: flex;
            justify-content: space-between;
            align-items: center;

            .indicator {
                text-align: center;
                background: transparent;
                margin: 1rem;
                // Styling for the dots can be found in char-pages.scss due to scoping issues with Astro
            }

            .prev-next-wrapper {
                display: flex;

                .prev,
                .next {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    cursor: pointer;
                    height: 2rem;
                    width: 2rem;
                    padding: 1.2rem;
                    margin: 1rem 5px;
                    color: white;
                    border-radius: 0.5rem;
                    user-select: none;
                    background-color: #3822179d;

                    &:hover {
                        background-color: #382217cc;
                    }

                    img {
                        width: 1.5rem;
                    }
                }

                .prev img {
                    transform: rotate(180deg);
                }
            }
        }
    }

</style>

<script src="/src/scripts/char-pages/slider.js"></script>
