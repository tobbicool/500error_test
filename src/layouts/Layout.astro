---


// Translation
import { getLanguageFromURL } from "../utils/language-utils.js";
import { initI18n } from "../i18n";

interface Props {
    title: string;
    i18n: any; // You might want to use a more specific type if available
}

const { title } = Astro.props;

// Get the language from the URL
const lang = getLanguageFromURL(Astro.url.pathname);

// Initialize i18n with the detected language
const i18n = await initI18n(lang);

i18n.changeLanguage(lang);
---

<html lang={lang}>
    <head>

        <title>Plants</title>

    </head>
    <body>

        <main>
            <slot />
        </main>
    </body>
</html>

<script>
    // We don't need to import i18n here as we're not using it directly in the client-side code

    document.addEventListener("astro:language-change", (event) => {
        // Use type assertion to tell TypeScript about the structure of the event
        const customEvent = event as CustomEvent<{ lang: string }>;
        const newLang = customEvent.detail.lang;
        document.documentElement.lang = newLang;

        // Reload the page to apply the new language
        window.location.reload();
    });
</script>
